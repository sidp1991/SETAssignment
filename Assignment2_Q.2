# -*- coding: utf-8 -*-
"""SET.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14eV8t0woAF9BK7i2D4rVBQcqZ3CPv3f2
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# %matplotlib inline

Data = pd.read_csv("/content/day.csv")
Data.head()

Data.describe()

Data.columns

Data.corr()

"""### Training Dataset"""

X = Data[['instant', 'season', 'yr', 'mnth', 'holiday', 'weekday',
       'workingday', 'weathersit', 'temp', 'atemp', 'hum', 'windspeed',
       'casual', 'registered']]
Y = Data['cnt']

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.4, random_state=42)

lr = LinearRegression()
lr.fit(X_train,y_train)

"""**Testing** **Dataset**"""

print(lr.intercept_)

predictions = lr.predict(X_test)
r2_score(y_test, predictions)

X_train=np.arange(0,len(X_train),1)
X_test=np.arange(0,len(X_test),1)
plt.scatter(X_train,y_train,color="orange")
plt.scatter(X_test,predictions,color="red")
plt.show()



"""# **Model Evaluation**"""

from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

from sklearn.metrics import r2_score
y_predLR = lr.predict(X_test)
r2_score(y_test, y_predLR)
