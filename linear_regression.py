# -*- coding: utf-8 -*-
"""linear_regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rcGZsnIAFE2oAz_3SyeVf9JSgNsQNZX-

Libraries
"""

import matplotlib.pyplot as plt
import numpy as np
from sklearn import linear_model
import pandas as pd
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

"""Dataset and setting Variables"""

dataset = pd.read_csv("weather.csv")

"""Splitting into Training and Testing"""

x=dataset.iloc[:,2].values
y=dataset.iloc[:,3].values

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=1/3,random_state=0)

"""Linear Regression Model"""

x_test=x_test.reshape(-1,1)
x_train=x_train.reshape(-1,1)

lin_reg = linear_model.LinearRegression()

lin_reg.fit(x_train,y_train)

"""Prediction"""

lin_reg_pred = lin_reg.predict(x_test)

print("Coefficients:",lin_reg.coef_)
print("Intercepts:",lin_reg.intercept_)

print("Mean squared error: %2f"% mean_squared_error(y_test,lin_reg_pred))

print("Variance: %2f"% r2_score(y_test,lin_reg_pred))

plt.scatter(x_test,y_test,color='red')
plt.plot(x_test,lin_reg_pred,color='blue')
plt.title('Temperature vs Humidity')
plt.xlabel('Temperature')
plt.ylabel('Relative humidity')
plt.show()